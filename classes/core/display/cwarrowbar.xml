<form name="cwarrowbar" margin="0" fauthor="$Author: Simon.c $" fdate="$Date: 12/10/01 10:54 $" frevision="$Revision: 2 $">
<members>
<String name="Image" constval="classes::resource::standard::dot_green_down.bmp" />
<method name="SetTitle">
<param name="Title" />
<![CDATA[
// Set the caption
lblTitle.SetText(Title);]]>
</method>
<method name="OnChange">
<![CDATA[//@version neil.t | 10-10-01 15:05 |

// Get the current image
if (Image == "classes::resource::standard::dot_green_up.bmp")
{
    imgArrow.SetAttr("img", "classes::resource::standard::dot_green_down.bmp");
    Image =  "classes::resource::standard::dot_green_down.bmp";
}
else
{
    imgArrow.SetAttr("img", "classes::resource::standard::dot_green_up.bmp");
    Image =  "classes::resource::standard::dot_green_up.bmp";
}

// Get the parent object
Object Parent = GetParent();
if (Parent == NULL) return;

object c=GetTheControl(Parent);

// Now notify the parent object
if (Parent.HasMethod("Toggle"))
{
    Parent.Toggle(C);
}
else if (Parent.HasMethod("Flick"))
{
    Parent.Flick(C);
}]]>
</method>
<method name="OnRightClick">
<![CDATA[//@cmember OnRightClick
//@version neil.t | 12-10-01 09:53 |

// Get the parent object
Object Parent = GetParent();
if (Parent == NULL) return;

object c=GetTheControl(Parent);

// Now notify the parent object
if (Parent.HasMethod("OnArrowBarRClick"))
{
    Parent.OnArrowBarRClick(C);
}]]>
</method>
<method name="GetTheControl">
<param name="Parent" />
<![CDATA[//@cmember GetTheControl
//@param object | Parent |
//@version neil.t | 10-10-01 15:00 |

// Get the control count
int i = Parent.ControlCount();

// Initalise a pointer to the first control - There must be one
Object C = Parent.GetControl(0);

// Now get this control on the parent form
for (int j = 0; j < i; j++)
{
    // Get the next control
    C = Parent.GetControl(j);

    // Is it a component - This object should be
    if (C.IsType("Component"))
    {
        // Get the class name
        String ClassName = C.CompClass();
        int idx1 = ClassName.IndexOf("::", 0, 1);
        int idx2 = idx1;
        while (idx1 >= 0)
        {
            idx2 = idx1;
            idx1 = ClassName.IndexOf("::", idx1+1, 1);
        }
        if (idx2 != -1)
        {
            ClassName = ClassName.Right(ClassName.Length()-idx2-2);
        }

        // Is it of this type ?
        if (ClassName == "cwarrowbar")
        {
            // Is it this control ?
            if (C.imgArrow == imgArrow)
            {
                return C;
            }
        }
    }

}]]>
</method>
<method name="SetUp">
<![CDATA[//@cmember SetUp
//@param
//@return
//@version 1.0
//@i       Sets image to UpArrow

imgArrow.SetAttr("img", "classes::resource::standard::dot_green_up.bmp");
Image =  "classes::resource::standard::dot_green_up.bmp";]]>
</method>
<method name="SetDown">
<![CDATA[//@cmember SetDown
//@param
//@return
//@version 1.0
//@i       Sets the image to the Down Arrow

imgArrow.SetAttr("img", "classes::resource::standard::dot_green_down.bmp");
Image =  "classes::resource::standard::dot_green_down.bmp";]]>
</method>
</members>
<static />
<grid>
<row>
<col w="9" align="W" bkimg="classes::resource::standard::green_bar_thin_edge_right.bmp" imgtile="8" />
<col tpad="5" w="11" bkimg="classes::resource::standard::green_bar_thin_edge.bmp">
<Image name="imgArrow" text="Image" img="classes::resource::standard::dot_green_down.bmp" onClick="OnChange" onRightClick="OnRightClick" />
</col>
<col lpad="3" tpad="3" rpad="5" w="170" h="24" align="W" bkimg="classes::resource::standard::green_bar_thin_edge.bmp" imgtile="8">
<Label name="lblTitle" text="Title" tx="255,255,255" style="b" font="Arial" onClick="OnChange" txsel="ffff00" OnRightClick="OnRightClick" />
</col>
<col w="11" bkimg="classes::resource::standard::green_bar_thin_edge_left.bmp" />
</row>
</grid>
</form>
