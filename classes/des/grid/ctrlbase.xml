<class name="CtrlBase" fauthor="$Author: Andrew.g $" fdate="$Date: 29/10/01 11:26 $" frevision="$Revision: 7 $" comment="base class for CLabel, CButt etc">
<members>
<String name="oldname" />
<method name="SetAttr">
<param name="attr" />
<param name="val" />
<![CDATA[
Object P = &GetParent();
if (P==null) return;
P.SetCtrlAttr(attr,val);]]>
</method>
<method name="Init">
<![CDATA[
for(int n=0;;n++)
{
Object Con = &GetControl(n); if (Con==null) break;

String id = Con.ControlID();
if (id=="") continue;
if (id=="idEnabled") SetYesNo(Con);
if (id=="idVisible") SetYesNo(Con);
if (id=="idTabStop") SetYesNo(Con);
if (id=="idMandatory")SetYesNo(Con);
if (id=="idFXType")  InitFX();
if (id=="idFont")    InitFont();
if (id=="idBorder"){
    Con.AddOption("None");
    Con.AddOption("Indent");
    Con.AddOption("Thin");
    }
}

SizeToFit();]]>
</method>
<method name="SetYesNo">
<param name="C" type="edit" />
<![CDATA[//@cmember SetYesNo
//@param edit | C |
//@version Andrew Griffin | 04-10-01 09:29 |

C.AddOption("Yes");
C.AddOption("No");]]>
</method>
<method name="InitFX">
<![CDATA[
idFXType.AddOption("Offset");
idFXType.AddOption("Thick");]]>
</method>
<method name="InitFont">
<![CDATA[
Object Z = &Sys::GetFontFamilies();
for(int c=0;c<Z.Count();c++)
    idFont.AddOption(Z[c]);
idFontStyle.AddOption("normal");
idFontStyle.AddOption("bold");
idFontStyle.AddOption("italic");
idFontStyle.AddOption("bold-italic");
for(c=6;c<=14;c++)
    idFontSize.AddOption(c+"");
idFontSize.AddOption("16");
idFontSize.AddOption("18");
idFontSize.AddOption("20");
idFontSize.AddOption("24");
idFontSize.AddOption("32");]]>
</method>
<method name="ShowCtrl">
<param name="Ctrl" />
<![CDATA[//@version Andrew Griffin | 24-09-01 16:36 |

// set the content of editor controls

for(int n=0;;n++)
{
Object Con = &GetControl(n); if (Con==null) break;

String id = Con.ControlID();

if (id=="") continue;

if (id=="idEnabled") ShowVisible(Ctrl);
if (id=="idVisible") ShowEnabled(Ctrl);
if (id=="idMandatory") ShowMandatory(Ctrl);
if (id=="idTabStop") ShowTabStop(Ctrl);
if (id=="idFXType")  ShowFX(Ctrl);
if (id=="idFont")    ShowFont(Ctrl);

if (id=="idName") {
    idName.setText( Ctrl.Name );
    oldName = Ctrl.Name;
} else oldName = "";

if (id=="idText") idText.setText( Ctrl.Text );
if (id=="idBind") idBind.setText( Ctrl.GetAttr("bind") );
if (id=="idHelp") idHelp.setText( Ctrl.GetAttr("help") );
if (id=="idGroups") Con.setText( Ctrl.GetAttr("groups") );

if (id=="idOnClick") idOnClick.setText( Ctrl.GetAttr("onClick") );

if (id=="idPickList") idPickList.setText( Ctrl.GetAttr("pick") );

if (id=="idImage") idImage.SetText( Ctrl.img );

if (id=="idBorder"){
    String s = Ctrl.GetAttr("border");
    if      (s=="0") Con.SetText("None");
    else if (s=="2") Con.SetText("Thin");
    else             Con.SetText("Indent");
    }

if (id=="idLeftPad") Con.setText( Ctrl.GetAttr("lpad") );
if (id=="idTopPad") Con.setText( Ctrl.GetAttr("tpad") );
if (id=="idRightPad") Con.setText( Ctrl.GetAttr("rpad") );
if (id=="idBottomPad") Con.setText( Ctrl.GetAttr("bpad") );

}

if (HasMethod("ShrinkEmpty")) ShrinkEmpty();]]>
</method>
<method name="ShowEnabled">
<param name="Ctrl" />
<![CDATA[
String s = Ctrl.GetAttr("disable");
if (s=="") s = "Yes"; else s = "No";
idEnabled.setText(s);]]>
</method>
<method name="ShowVisible">
<param name="Ctrl" />
<![CDATA[
String s = Ctrl.GetAttr("hide");
if (s=="") s = "Yes"; else s = "No";
idVisible.setText(s);]]>
</method>
<method name="ShowTabStop">
<param name="Ctrl" />
<![CDATA[
String s = Ctrl.GetAttr("notab");
if (s=="") s = "Yes"; else s = "No";
idTabStop.setText(s);]]>
</method>
<method name="ShowMandatory">
<param name="Ctrl" />
<![CDATA[
String s = Ctrl.GetAttr("mandatory");
if (s=="")
    s = "No";
else
    s = "Yes";
idMandatory.setText(s);]]>
</method>
<method name="ShowFX">
<param name="Ctrl" />
<![CDATA[
idFXShadX.setText( Ctrl.shadx.toString() );
idFXShadY.setText( Ctrl.shady.toString() );
idFXShadColor.setBkColor( Ctrl.shadc );
idFXShadTL.setBkColor( Ctrl.tlc );
idFXShadBR.setBkColor( Ctrl.brc );
if (Ctrl.shadt==0) idFXType.setText("Offset");
else idFXType.setText("Thick");]]>
</method>
<method name="ShowFont">
<param name="Ctrl" />
<![CDATA[
String s = Ctrl.GetAttr("font");
if (s=="") s = "MS Sans Serif";
idFont.setText( s );
idFontSize.setText( Ctrl.GetAttr("size") );
s = Ctrl.GetAttr("style");
if      (s=="b") idFontStyle.setText("bold");
else if (s=="i") idFontStyle.setText("italic");
else if (s=="bi") idFontStyle.setText("bold-italic");
else idFontStyle.setText("normal");]]>
</method>
<method name="DoEnabled">
<![CDATA[
String s = idEnabled.getText();
if (s=="Yes") s = ""; else s="Y";
SetAttr("disable",s);]]>
</method>
<method name="DoVisible">
<![CDATA[
String s = idVisible.getText();
if (s=="Yes") s = ""; else s="Y";
SetAttr("hide",s);]]>
</method>
<method name="DoTabStop">
<![CDATA[
String s = idTabStop.getText();
if (s=="Yes") s = ""; else s="Y";
SetAttr("notab",s);]]>
</method>
<method name="DoMandatory">
<![CDATA[
String s = idMandatory.getText();
if (s=="Yes")
    s = "y";
else
    s="";

SetAttr("mandatory",s);]]>
</method>
<method name="DoText">
<![CDATA[
SetAttr("text",idText.getText());]]>
</method>
<method name="DoName">
<![CDATA[
ctrlEdit cE = &getParent();
WGridEdit wG = &cE.getParent();
::WClassView wC = &wG.getParent();
::Grid G = &wC.XFile.Classes[0].Grids[0];

string nName = idName.getText();
SetAttr("name", nName);

G.updateControl( oldName, nName, wC );
oldName = nName;]]>
</method>
<method name="DoHelp">
<![CDATA[
SetAttr("help",idHelp.getText());]]>
</method>
<method name="DoGroups">
<![CDATA[
SetAttr("groups",idGroups.getText());]]>
</method>
<method name="DoBorder">
<![CDATA[
String s = idBorder.GetText();
if      (s=="None") s = "0";
else if (s=="Thin") s = "2";
else                s = "";

SetAttr("border",s);]]>
</method>
<method name="DoOnClick">
<![CDATA[
SetAttr("onClick",idOnClick.getText());]]>
</method>
<method name="DoImage">
<![CDATA[//@version Andrew Griffin | 26-09-01 10:32 |

string fn=idImage.getText(),
       pth=getParent().getParent().getParent().filename;

int i = pth.lastIndexOf("\\");
if (i>=0) pth = pth.left(i+1);

if (fn!="") fn=::AdvSearch::classToPath( fn, pth, 1);


fn = GetOpenFileName("Image","BMP Files|*.bmp|All|*.*",fn);
if (!fn) return;
SetAttr("img","file::"+fn);

i = fn.lastindexof( "\\" );
if (i>=0) fn = fn.substring( i+1 );
i = fn.lastindexof( ":" );
if (i>=0) fn = fn.substring( i+1 );

idImage.SetText( fn );]]>
</method>
<method name="DoNoImage">
<![CDATA[
SetAttr("img","");
idImage.SetText( "" );]]>
</method>
<method name="DoPickList">
<![CDATA[
SetAttr("pick",idPickList.getText());]]>
</method>
<method name="DoFont">
<![CDATA[
String s = idFont.getText();
if (s=="MS Sans Serif") s="";
SetAttr("font",s);]]>
</method>
<method name="DoFontStyle">
<![CDATA[
String s = idFontStyle.getText();
if      (s=="bold") s="b";
else if (s=="italic") s="i";
else if (s=="bold-italic") s = "bi";
else s="";
SetAttr("style",s);]]>
</method>
<method name="DoFontSize">
<![CDATA[
SetAttr("size",idFontSize.getText());]]>
</method>
<method name="DoBind">
<param name="C" />
<![CDATA[
/* String s = GetBindPick();
if (s=="") return;
C.setText(s);
SetAttr("bind",s); */

SetAttr("bind",C.getText());]]>
</method>
<method name="DoHideShowFX">
<![CDATA[
/*
int i = !idTextColor.isVisible();
idTextColor.setVisible(i);
idTextColorC.setVisible(i);
*/
idFXGrid.setVisible( !idFXGrid.isVisible() );
GetParent().SizeAdjust();]]>
</method>
<method name="DoFXType">
<![CDATA[
String s = idFXType.getText();
if (s=="Offset") s="0"; else s="1";
SetAttr("shadt",s);]]>
</method>
<method name="DoFXShadX">
<![CDATA[
SetAttr("shadx",idFXShadX.getText());]]>
</method>
<method name="DoFXShadY">
<![CDATA[
SetAttr("shady",idFXShadY.getText());]]>
</method>
<method name="DoColor">
<param name="attr" />
<param name="butt" />
<![CDATA[
int i = Sys::GetColor( butt.getBkColor() );
if (i==-1) return;
SetAttr(attr,RGBXML(i));
butt.setBkColor( i );]]>
</method>
<method name="DoTextColor">
<![CDATA[ DoColor("tx",idTextColor);]]>
</method>
<method name="DoFXShadTL">
<![CDATA[  DoColor("tlc",idFXShadTL);]]>
</method>
<method name="DoFXShadBR">
<![CDATA[  DoColor("brc",idFXShadBR);]]>
</method>
<method name="DoFXShadColor">
<![CDATA[  DoColor("shadc",idFXShadColor);]]>
</method>
<method name="ChooseBind">
<![CDATA[
Object P = &GetParent(); // the popup
if (P==null) return;
Object GE = &P.GetParent(); // the grid editor
if (GE==null) return;
Object CE = &GE.GetParent();  // class editor!
if (CE==null) return;

String s = CE.GetVarName();
if (!s) return;

idBind.setText(s);
SetAttr("bind",s);]]>
</method>
<method name="DoBindToObject">
<param name="C" />
<![CDATA[
String s = GetBindPickObject();
if (s=="") return;
C.setText(s);
SetAttr("bind",s);]]>
</method>
<method name="GetBindPick">
<![CDATA[
PopupMenu F;
F.Add("Surname","TheFolder.Surname");
F.Add("MemberNo","TheFolder.MemberNo");
PopupMenu D;
D.Add("DocNo","TheDocument.DocNo");
D.Add("TypeName","TheDocument.TypeName");
PopupMenu P;
P.Add(F,"TheFolder");
P.Add(D,"TheDocument");
return P.Track();]]>
</method>
<method name="GetBindPickObject">
<![CDATA[
PopupMenu P;
P.Add("TheFolder");
P.Add("TheDocument");
return P.Track();]]>
</method>
<method name="XXXXX___GetColorXML">
<![CDATA[
int i = Sys::GetColor();
if (i==-1) return "";
int r = (i & 0xFF0000) / 0x10000;
int g = (i & 0xFF00) / 0x100;
int b = i & 0xFF;
String s = r+","+g+","+b;
return s;]]>
</method>
<method name="RGBXML">
<param name="i" />
<![CDATA[
if (i==-2) return "";
int r = (i & 0xFF0000) / 0x10000;
int g = (i & 0xFF00) / 0x100;
int b = i & 0xFF;
String s = r+","+g+","+b;
return s;]]>
</method>
<method name="DoLeftPad">
<![CDATA[
SetAttr("lpad",idLeftPad.getText());]]>
</method>
<method name="DoTopPad">
<![CDATA[
SetAttr("tpad",idTopPad.getText());]]>
</method>
<method name="DoRightPad">
<![CDATA[
SetAttr("rpad",idRightPad.getText());]]>
</method>
<method name="DoBottomPad">
<![CDATA[
SetAttr("bpad",idBottomPad.getText());]]>
</method>
<method name="doColorSel">
<param name="con" type="button" />
<![CDATA[
int i = Sys::GetColor( con.getBkColor() );
if (i==-1) return;
int r = (i & 0xFF0000) / 0x10000;
int g = (i & 0xFF00) / 0x100;
int b = i & 0xFF;
String s = con.getControlAttr("name");

control c = &getControl( s.left(s.indexOf("_")) + "_E" );

string cols;

if (c==null || c.getText().indexOf(",")>=0) {
    cols = r+","+g+","+b;
} else {
    cols = i.toString("08X").subString(2);
}

//string cols = r+","+g+","+b;
GetParent().SetCtrlAttr(s.left(s.indexOf("_")), cols);

con.setBkColor( i );

//control c = &getControl( s.left(s.indexOf("_")) + "_E" );
if (c!=null) c.setText( cols );]]>
</method>
<method name="doColorDel">
<param name="con" type="button" />
<![CDATA[String s = con.getControlAttr("name");
int i = s.indexOf("_");

GetParent().SetCtrlAttr(s.left(i), "");

getControl( s.left(i) + "_P" ).setBkColor( -1 );

control c = &getControl( s.left(i) + "_E" );
if (c!=null) c.setText( "" );]]>
</method>
<method name="doColorEd">
<param name="con" type="button" />
<param name="dontAttr" />
<![CDATA[String s = con.getControlAttr("name");
int i = s.indexOf("_");

if (dontAttr==null) GetParent().SetCtrlAttr(s.left(i), con.getText() );

getControl( s.left(i) + "_P" ).setBkColor(
    (con.getText()=="") ? -1 :
        ::WClsDef::ColorToInt( con.getText() )
);]]>
</method>
<method name="onChar">
<param name="Key" type="int" />
<param name="State" type="int" />
<param name="Ctrl" type="control" />
<![CDATA[//@cmember onChar
//@param int | Key |
//@param int | State |
//@param control | Ctrl |
//@version Andrew Griffin | 08-08-01 12:51 |
//@i

getParent().onChar( Key, State, Ctrl );]]>
</method>
<method name="doDropOptions">
<param name="ctrl" type="control" />
<param name="override" type="int" />
<![CDATA[//@cmember doDropOptions
//@param control | ctrl |
//@param int | override |
//@version Andrew Griffin | 24-09-01 15:15 |
//@i

grid pgrid = &ctrl.GetGrid();
image img = &pgrid.getcell( 0,0 ).control;
string state = img.GetControlAttr( "popped" );

if (override!=null)
  if (override) state="up"; else state="";

if (state) {
    state = "";
    img.setAttr( "img", "upbutt.bmp" );
} else {
    state = "up";
    img.setAttr( "img", "downbutt.bmp" );
}

img.setAttr( "popped", state );
showgroup( img.getControlAttr( "param" ), !state );

getParent().SizeFormToContent();]]>
</method>
</members>
<static>
<List name="cYesNo" cls="classes::cpicks">
<item code="Y" desc="Yes" />
<item code="N" desc="No" />
</List>
<List name="cYes" cls="classes::cpicks">
<item code="1" desc="Yes" />
<item code="" desc="No" />
</List>
</static>
</class>
