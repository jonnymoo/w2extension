<form name="WProject" description="The Project Viewer" caption="Project View" savepos="aProjPos" icon="::Project.ico" bk="D4D0C8" acceptfiles="1" hidden="1" fauthor="$Author: Chris Moran$" fdate="$Date: 8 12 03 11:40$" frevision="$Revision: 2$">
<members>
<Object name="projHier" cls="aProject" />
<Object name="copyHier" cls="xml" />
<String name="projName" />
<String name="projPath" />
<Integer name="Mod" />
<method name="modName">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

projHier.classes[0].name = projName;
setMod( 1 );]]>
</method>
<method name="Init">
<param name="f" type="object" />
<![CDATA[//@cmember
//@param object | f |
//@version Jonathan.Muir | 27-02-06 11:50 |
//@i

projPath = ::AdvSearch::rootPath + "projects\\";
Reset();

if(f!=NULL)
{
    dialog(f);
}

if (ProjHist.count()!=0) return;

XML load = &classes::des::globalxml::loadXML( "::projHist.ini", path() );
if (load.tag()=="error") return;

for (int i=0; i<load[0].count(); i++) {
    classes::cpicks tmp = &ProjHist.CreateRow();
    tmp.code = load[0][i].GetAttr("code");
    tmp.desc = load[0][i].GetAttr("desc");
}]]>
</method>
<method name="Reset">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

projHier.classes.reset();
string p = projPath.left( projPath.lastIndexOf("\\")+1 ) + "New Project.xpj";
aClass::addClass( projHier.classes, p, -1, "", "" );

projName = "New Project";
modName();
setMod( 0 );]]>
</method>
<method name="onClose">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

Show(0);]]>
</method>
<method name="onMenuNew" return="int">
<![CDATA[//@cmember
//@return int |
//@version Andrew Griffin | 30-11-01 12:28 |
//@i

if (mod && !areYouSure( "New Project") ) return 0;

reset();
fitrecursive();
setMod( 0 );
return 1;]]>
</method>
<method name="onMenuSaveAs">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

string filename = projPath + projName + ".xpj";
filename = GetSaveFileName( "Save Project As", "W2 Project Files|*.xpj", filename );
if (filename=="") return;

int i = filename.lastIndexOf("\\");
int i2 = filename.lastIndexOf(".");
if (i2==-1) {
    filename += ".xpj";
    i2 = filename.lastIndexOf(".");
}

projPath = filename.left(i+1);
projName = filename.subString(i+1, i2);

onMenuSave();]]>
</method>
<method name="onMenuSave">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

projHier.classes[0].name = projName;

projHier.classes[0].path = projPath + projName + ".xpj";

if (projHier.saveProject( projHier.classes[0].path )) {
    setMod( 0 );
    addToProjHistory( projHier.classes[0].path );
}]]>
</method>
<method name="onMenuOpen">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

if (mod && !areYouSure( "Open Project") ) return;

string filename = projPath;
filename = GetOpenFileName( "Load Project", "W2 Project Files|*.xpj", filename );

if (filename=="") return;

reset();
setMod( 0 );

OpenFile( filename );]]>
</method>
<method name="openFile">
<param name="filename" type="string" />
<param name="max" type="int" />
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

if (filename=="") return 0;

if (mod && !areYouSure( "Open Project") ) return 0;

int i = filename.lastIndexOf("\\");
int i2 = filename.lastIndexOf(".");
projPath = filename.left(i+1);
projName = filename.subString(i+1, i2);

if (!projHier.loadProject( filename )) {
    addToProjHistory( filename, 1 );    // force deletion
    return 0;
}

projHier.classes[0].setOpen(1);
idProjHier.selectRow(projHier.classes[0]);
projHier.classes[0].EventHierMouseSelect( &idprojHier );

setMod( 0 );
idProjHier.update();
fitrecursive();

addToProjHistory( filename );

if (max!=null && max==1) bringToFront();

return 1;]]>
</method>
<method name="getFormParent" return="list">
<param name="cls" type="string" />
<![CDATA[//@cmember
//@param
//@return
//@version Andrew | 26-01-02 17:26 |
//@i

//message( "Get: " + cls );

aClass c[];

projHier.classes[0].findClassPar( &c, cls );

//if (c.count()) message( "found..." );

return c;]]>
</method>
<method name="getFormComps" return="string">
<param name="cls" type="string" />
<param name="pcon" type="string" />
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

aClass ac = &projHier.classes[0].findClass( cls );
if (ac==null) return "";

string s;
for (int i=0; i<ac.classes.Count(); i++) {
    if (ac.classes[i].parControl.eq( pcon ))
        s.addtoken( ac.classes[i].Path );
}

return s;]]>
</method>
<method name="setMod">
<param name="yes" type="int" />
<![CDATA[//@cmember
//@param
//@return
//@version Andrew Griffin | 18-09-01 12:59 |
//@i

::browse::ClsBrowser::myBrowser.flush = 1;
::browse::ClsBrowser::myBrowserHid.flush = 1;

if (mod==yes) return;

mod = yes;

string s = "Project: " + projName;
if (mod) s += " *";

setText( s );]]>
</method>
<method name="areYouSure" return="int">
<param name="title" type="string" />
<![CDATA[//@cmember areYouSure
//@param string | title | Message Title
//@return int

int a = message( "Current Project not saved!\r\nSave Changes Now?", title,
         classes::core::windows::MB_YESNOCANCEL );

if (a==classes::core::windows::IDNO) return 1;      // Loose Changes.
if (a==classes::core::windows::IDCANCEL) return 0;  // Cancel (Don't loose changes).

// Save changes and proceed...

projHier.classes[0].name = projName;
projHier.classes[0].path = projPath + projName + ".xpj";

return projHier.saveProject( projHier.classes[0].path );]]>
</method>
<method name="descChange">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

message("This description will not be saved!\r\n"
        "Either open the class and modify its description,\r\n"
        "or place your own notes in the box below.");]]>
</method>
<method name="notesChange">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

setMod( 1 );]]>
</method>
<method name="doTop">
<![CDATA[//@i Toggle Browser Window 'Stay on Top'

if (toping) {
    idTop.setAttr( "img", "::Browse::pinOUT.bmp" );
    SetTopMost(0);
    toping = 0;
} else {
    idTop.SetAttr( "img", "::Browse::pinIN.bmp" );
    SetTopMost(1);
    toping = 1;
}]]>
</method>
<method name="toggleDesc">
<![CDATA[
int vis = !idDesc.isVisibleReally();

ShowGroup( "DescGrp", vis );

//idDesc.setVisible( !idDesc.isVisible() );
//idNotes.setVisible( idDesc.isVisible() );

//if (idDesc.isVisible())
if (!vis)
    idShowDesc.setAttr( "img", "classes::resource::standard::dot_red_down.bmp" );
else
    idShowDesc.setAttr( "img", "classes::resource::standard::dot_red_up.bmp" );

FitRecursive();]]>
</method>
<method name="bringToFront">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

setforeground();      // bring to front of screen elements
show(1);              // if minimized bring to front
idProjHier.update();  // redraw
SetTopMost(1);
if (!toping) SetTopMost(0);]]>
</method>
<method name="selectClass">
<param name="clsName" type="string" />
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

object o = &projHier.classes[0].findClass( clsName );
if (o==null) {
    message( clsName );
    return;
}

idProjHier.selectRow( o );
o.EventHierMouseSelect( &idProjHier );]]>
</method>
<method name="OnDropFiles">
<param name="files" type="object" />
<![CDATA[for (int i=0; i<Files.count(); i++) {

    String path = Files[i];

    aClass tmp = &idProjHier.CurrentRow();
    if (tmp==null) tmp = &projHier.classes[0];

    tmp.addClass( tmp.classes, path, 0, "", "" );
    tmp.SetOpen( 1 );

    setMod( 1 );
}]]>
</method>
</members>
<static>
<Integer name="Toping" />
<List name="ProjHist" cls="classes::CPickS" />
<method name="main">
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

WProject me;
me.init();]]>
</method>
<method name="addToProjHistory">
<param name="filename" type="string" />
<param name="del" type="int" />
<![CDATA[//@cmember
//@param
//@return
//@version
//@i

// Is it there already

CPickS f = &ProjHist.FindRow( filename );

if (f!=null) f.RemoveFromList();

if (del==null || del==0) {
    CPickS n = &ProjHist.CreateRow(0);
    n.code = filename;
    n.desc = filename.subString( filename.lastIndexOf("\\")+1 );
}

while (ProjHist.count()>8)
  ProjHist.DeleteRow( ProjHist.count()-1 );

// Save History

XML sav;
sav.setTag( "List" );

for (int i=0; i<ProjHist.count(); i++) {
    xml t = &sav.CreateElement("Item");
    t.AddAttr( "code", ProjHist[i].code );
    t.AddAttr( "desc", ProjHist[i].desc );
}

classes::des::globalxml::SaveXML( sav, "::projHist.ini", path() );]]>
</method>
</static>
<grid>
<row>
<col />
<col />
<col />
</row>
<row>
<col />
<col align="WH">
<Hierarchy name="idProjHier" text="Hierarchy" bind="projHier" />
</col>
<col />
</row>
<row>
<col />
<col h="4" />
<col />
</row>
<row>
<col />
<col tpad="2" bk="255,255,255">
<grid>
<row>
<col lpad="4" rpad="4">
<Image name="idShowDesc" text="Image" img="classes::resource::standard::dot_red_up.bmp" onClick="toggleDesc" />
</col>
<col>
<Label name="idDescLab" text="Description / Notes" tx="0,0,128" onClick="toggleDesc" />
</col>
</row>
</grid>
</col>
<col />
</row>
<row>
<col />
<col align="W">
<Edit name="idDesc" h="32" border="2" onChange="descChange" multi="1" hide="Y" groups="DescGrp" />
</col>
<col />
</row>
<row>
<col />
<col align="W">
<Edit name="idNotes" h="48" border="2" onChange="notesChange" multi="1" hide="Y" groups="DescGrp" />
</col>
<col />
</row>
<row>
<col />
<col align="W">
<grid groups="DescGrp" hide="Y">
<row>
<col rpad="4" align="V">
<Label text="Par. Control Name:" />
</col>
<col align="W">
<Edit name="idParCtrl" border="2" onChange="notesChange" />
</col>
</row>
</grid>
</col>
<col />
</row>
<row>
<col />
<col lpad="0" tpad="4" rpad="0" bpad="0" h="20" align="W" bk="0,0,128">
<grid>
<row>
<col lpad="0" tpad="0" rpad="1" bpad="0" align="W" bk="0,0,128">
<Edit name="idLocation" h="16" border="0" />
</col>
<col w="28" align="C" bk="255,255,255">
<Image name="idTop" text="Image" img="des::browse::pinout.bmp" onClick="doTop" />
</col>
</row>
</grid>
</col>
<col />
</row>
</grid>
<Menu>
<Popup text="File">
<Item text="New" onClick="onMenuNew" />
<Item text="Open" onClick="onMenuOpen" />
<Separator />
<Item text="Save" onClick="onMenuSave" />
<Item text="Save As" onClick="onMenuSaveAs" />
<Separator />
<Item text="Exit" onClick="onClose" />
</Popup>
</Menu>
<return>
<rmeth name="onMenuNew" cls="int" />
<rmeth name="getFormParent" cls="list" />
<rmeth name="getFormComps" cls="string" />
<rmeth name="areYouSure" cls="int" />
</return>
</form>
