<class name="aSSafeTrans" sqlname="desSSTrans" DataSource="DSES" sqlalias="ZST" sqlseq="desSSTransSeq" fauthor="$Author: Chris Moran $" fdate="$Date: 8 12 03 11:41 $" frevision="$Revision: 2 $">
<members>
<Integer name="ssafeId" size="9" null="N" key="Y" seq="Y" />
<String name="justName" sql="~" size="40" />
<String name="clsname" size="256" />
<Integer name="sesId" size="9" null="N" />
<Date name="transDate" time="Y" />
<Integer name="mode" sql="cmode" pick="sMode" />
<String name="userId" size="20" />
<method name="deleteMe">
<![CDATA[//@cmember deleteMe
//@param
//@return
//@version Andrew Griffin | 22-02-02 10:26 |
//@i

dbconnection db = &classes::core::srvglobal::GetDB( aSession::sessionDB );

if (db.DeleteObject( this ))
{
    db.Commit();
    return 1;
} else return 0;]]>
</method>
</members>
<static>
<List name="sMode" cls="classes::cpickn">
<item code="0" desc="(+)" PickType="" />
<item code="1" desc="Out" PickType="" />
<item code="2" desc="In" PickType="" />
<item code="3" desc="Undo" PickType="" />
</List>
<method name="registerSSAFE">
<param name="filename" type="string" />
<param name="sesId" type="int" />
<param name="mode" type="int" />
<![CDATA[//@cmember registerSSAFE
//@param string | filename |
//@param int | sesId |
//@param int | mode | 1 = check out, 2 = check in, 3 = undo checkout
//@version Andrew Griffin | 22-02-02 10:59 |

dbconnection db = &classes::core::srvglobal::GetDB( aSession::sessionDB );

if (mode!=3)    // check in / out / new
{
    aSSafeTrans me;

    me.clsname = classes::core::globalString::MakeFullClassRef( filename );
    me.sesId = sesId;
    me.transDate.SysTime();
    me.mode = mode;
    me.userId = ::func::me;

    if (!db.InsertObject( me ))
    {
        message( "Error Inserting New Row\r\nError: " + db.GetError() + "\r\nSQL: " + db.LastSQL(), "Database Error" );
        return;
    }

}
else            // undo check out...
{
    aSSafeTrans fs = &getTransaction( filename );
    if (fs!=null)
    {
        if (!db.DeleteObject( fs ))
        {
            message( "Error Deleting Row\r\nError: " + db.GetError() + "\r\nSQL: " + db.LastSQL(), "Database Error" );
            return;
        }
    }
}

db.Commit();]]>
</method>
<method name="getTransaction" return="aSsafeTrans">
<param name="filename" type="string" />
<param name="any" type="int" />
<![CDATA[//@cmember getTransaction
//@param string | filename |
//@param int | any | bring back any matching record or just checked out ones (optional)
//@return aSsafeTrans |
//@version Andrew Griffin | 16-05-02 13:51 |
//@i

dbconnection db = &classes::core::srvglobal::GetDB( aSession::sessionDB );

// get matching filename row...

string name = classes::core::globalString::MakeFullClassRef( filename );

aSSafeTrans me;
db.ObjectQuery( me, "clsname=" + name.sql() + " order by transdate DESC" );

if (me.ssafeId.isBlank()) return null;
if ((any==null || any==0) && me.mode>1) return null;    // not a check out or new

return me;]]>
</method>
</static>
<return>
<rmeth name="getTransaction" cls="aSsafeTrans" />
</return>
</class>
